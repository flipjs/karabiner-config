<?xml version="1.0"?>

<root>

<devicevendordef>
<vendorname>APPLE</vendorname>
<vendorid>0x05ac</vendorid>
</devicevendordef>

<devicevendordef>
<vendorname>KBP</vendorname>
<vendorid>0x04d9</vendorid>
</devicevendordef>

<devicevendordef>
<vendorname>HHKB</vendorname>
<vendorid>0x0853</vendorid>
</devicevendordef>

<deviceproductdef>
<productname>MBPRO13R</productname>
<productid>0x025a</productid>
</deviceproductdef>

<deviceproductdef>
<productname>V60</productname>
<productid>0x0112</productid>
</deviceproductdef>

<deviceproductdef>
<productname>PRO2TYPES</productname>
<productid>0x0100</productid>
</deviceproductdef>

<deviceproductdef>
<productname>MJ_TKL</productname>
<productid>0x2011</productid>
</deviceproductdef>

<item>

	<name>Personal Custom Function Layer</name>

	<item>

		<name>Remap Unused Function Keys to Hyper, Meta, and Control Keys (SEIL-reliant)</name>

		<item>
			<name>Change F19 to Hyper Key</name>
			<appendix>Requirement: Set a key (i.e. Left Option Key) to F19 in Seil to act as HYPER Key system-wide</appendix>
			<identifier>private.hyper</identifier>
			<autogen>
				__KeyToKey__
				KeyCode::F19,
				KeyCode::COMMAND_L,
				ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
			</autogen>
		</item>

		<item>
			<name>Change F18 to Meta Key</name>
			<appendix>Requirement: Set a key (i.e. Left Control Key) to F18 in Seil to act as META Key system-wide</appendix>
			<identifier>private.meta</identifier>
			<autogen>
				__KeyToKey__
				KeyCode::F18,
				KeyCode::COMMAND_L,
				ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
			</autogen>
		</item>

		<item>
			<name>Change F17 to Left Control Key</name>
			<appendix>Requirement: Set a key (i.e. Capslock Key) to F17 in Seil to act as Left Control Key system-wide</appendix>
			<identifier>private.control_l</identifier>
			<autogen>__KeyToKey__ KeyCode::F17, KeyCode::CONTROL_L</autogen>
		</item>

	</item>

	<item>

		<name>Keyboard-specific Bindings</name>

		<item>

			<name>Macbook Pro Internal Keyboard Bindings</name>

			<item>
				<name>Remap Right Command Key to Hyper Key</name>
				<appendix>External keyboard only, Macbook retains its original key function</appendix>
				<device_only>DeviceVendor::APPLE, DeviceProduct::MBPRO13R</device_only>
				<identifier>private.mbpro13r_option_r_to_hyper</identifier>
				<autogen>
					__KeyToKey__
					KeyCode::COMMAND_R,
					KeyCode::COMMAND_L,
					ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
				</autogen>
			</item>

			<item>
				<name>Remap Right Option Key to Meta Key</name>
				<appendix>External keyboard only, Macbook retains its original key function</appendix>
				<device_only>DeviceVendor::APPLE, DeviceProduct::MBPRO13R</device_only>
				<identifier>private.mbpro13r_command_r_to_meta</identifier>
				<autogen>
					__KeyToKey__
					KeyCode::OPTION_R,
					KeyCode::COMMAND_L,
					ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
				</autogen>
			</item>

		</item>

		<item>

			<name>KBP V60 Bindings</name>

			<item>
				<name>Remap Backspace Key to Hyper Key</name>
				<appendix>External keyboard only, Macbook retains its original key function</appendix>
				<device_only>DeviceVendor::KBP, DeviceProduct::V60</device_only>
				<identifier>private.v60_backspace_to_hyper</identifier>
				<autogen>
					__KeyToKey__
					KeyCode::DELETE,
					KeyCode::COMMAND_L,
					ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
				</autogen>
			</item>

			<item>
				<name>Remap Right Option Key to Hyper Key</name>
				<appendix>External keyboard only, Macbook retains its original key function</appendix>
				<device_only>DeviceVendor::KBP, DeviceProduct::V60</device_only>
				<identifier>private.v60_option_r_to_hyper</identifier>
				<autogen>
					__KeyToKey__
					KeyCode::OPTION_R,
					KeyCode::COMMAND_L,
					ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
				</autogen>
			</item>

			<item>
				<name>Remap Right Command Key to Meta Key</name>
				<appendix>External keyboard only, Macbook retains its original key function</appendix>
				<device_only>DeviceVendor::KBP, DeviceProduct::V60</device_only>
				<identifier>private.v60_command_r_to_meta</identifier>
				<autogen>
					__KeyToKey__
					KeyCode::COMMAND_R,
					KeyCode::COMMAND_L,
					ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
				</autogen>
			</item>

			<item>
				<name>Remap Left Control and Left Option to Down and Up Arrows</name>
				<identifier>private.down_up</identifier>
				<device_only>DeviceVendor::KBP, DeviceProduct::V60</device_only>
				<autogen>__KeyToKey__ KeyCode::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
				<autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::CURSOR_UP</autogen>
			</item>

			<item>
				<name>Remap Menu Key and Right Control to Left and Right Arrows</name>
				<identifier>private.left_right</identifier>
				<device_only>DeviceVendor::KBP, DeviceProduct::V60</device_only>
				<autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::CURSOR_LEFT</autogen>
				<autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::CURSOR_RIGHT</autogen>
			</item>

		</item>

		<item>

			<name>HHKB Pro-2 Type-S Bindings</name>

			<item>
				<name>Remap Right Command Key to Hyper Key</name>
				<appendix>External keyboard only, Macbook retains its original key function</appendix>
				<device_only>DeviceVendor::HHKB, DeviceProduct::PRO2TYPES</device_only>
				<identifier>private.pro2types_option_r_to_hyper</identifier>
				<autogen>
					__KeyToKey__
					KeyCode::COMMAND_R,
					KeyCode::COMMAND_L,
					ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
				</autogen>
			</item>

			<item>
				<name>Remap Right Option Key to Meta Key</name>
				<appendix>External keyboard only, Macbook retains its original key function</appendix>
				<device_only>DeviceVendor::HHKB, DeviceProduct::PRO2TYPES</device_only>
				<identifier>private.pro2types_command_r_to_meta</identifier>
				<autogen>
					__KeyToKey__
					KeyCode::OPTION_R,
					KeyCode::COMMAND_L,
					ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
				</autogen>
			</item>

		</item>

	</item>


	<item>

		<name>HYPER Common Bindings</name>

		<item>
			<name>(Hyper) Number Row as F1 to F12</name>
			<identifier>private.hyper_common_f1_to_f12</identifier>
			<autogen>__KeyToKey__ KeyCode::KEY_1,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F1</autogen>
			<autogen>__KeyToKey__ KeyCode::KEY_2,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F2</autogen>
			<autogen>__KeyToKey__ KeyCode::KEY_3,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F3</autogen>
			<autogen>__KeyToKey__ KeyCode::KEY_4,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F4</autogen>
			<autogen>__KeyToKey__ KeyCode::KEY_5,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F5</autogen>
			<autogen>__KeyToKey__ KeyCode::KEY_6,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F6</autogen>
			<autogen>__KeyToKey__ KeyCode::KEY_7,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F7</autogen>
			<autogen>__KeyToKey__ KeyCode::KEY_8,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F8</autogen>
			<autogen>__KeyToKey__ KeyCode::KEY_9,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F9</autogen>
			<autogen>__KeyToKey__ KeyCode::KEY_0,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F10</autogen>
			<autogen>__KeyToKey__ KeyCode::MINUS,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F11</autogen>
			<autogen>__KeyToKey__ KeyCode::EQUAL,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::F12</autogen>
		</item>

		<item>
			<name>(Hyper) Backspace as Delete Key</name>
			<identifier>private.hyper_common_delete</identifier>
			<autogen>__KeyToKey__ KeyCode::DELETE,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::FORWARD_DELETE</autogen>
		</item>

		<item>
			<name>(Hyper) Square Brackets and Backslash as Volume Functions</name>
			<identifier>private.hyper_common_volume</identifier>
			<autogen>__KeyToKey__ KeyCode::BRACKET_LEFT,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::VK_CONSUMERKEY_VOLUME_DOWN</autogen>
			<autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::VK_CONSUMERKEY_VOLUME_UP</autogen>
			<autogen>__KeyToKey__ KeyCode::BACKSLASH,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::VK_CONSUMERKEY_VOLUME_MUTE</autogen>
		</item>

		<item>
			<name>(Hyper) Semicolon and Quote as Screen Brightness Functions</name>
			<identifier>private.hyper_common_screen_brightness</identifier>
			<autogen>__KeyToKey__ KeyCode::SEMICOLON,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN</autogen>
			<autogen>__KeyToKey__ KeyCode::QUOTE,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP</autogen>
		</item>

	</item>

	<item>

		<name>HYPER Left-hand Side Bindings</name>

		<item>
			<name>(Hyper) WASD as Arrow Keys</name>
			<identifier>private.hyper_left_arrow_keys</identifier>
			<autogen>--KeyToKey-- KeyCode::W,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::CURSOR_UP</autogen>
			<autogen>--KeyToKey-- KeyCode::A,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::CURSOR_LEFT</autogen>
			<autogen>--KeyToKey-- KeyCode::S,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::CURSOR_DOWN</autogen>
			<autogen>--KeyToKey-- KeyCode::D,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::CURSOR_RIGHT</autogen>
		</item>

		<item>
			<name>(Hyper) Q and E as PageUp and PageDown Keys</name>
			<identifier>private.hyper_left_pgup_pgdn</identifier>
			<autogen>__KeyToKey__ KeyCode::Q,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::PAGEUP</autogen>
			<autogen>__KeyToKey__ KeyCode::E,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::PAGEDOWN</autogen>
		</item>

		<item>
			<name>(Hyper) F and R as Delete and Backspace Keys</name>
			<identifier>private.hyper_left_delete_backspace</identifier>
			<autogen>__KeyToKey__ KeyCode::F,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::FORWARD_DELETE</autogen>
			<autogen>__KeyToKey__ KeyCode::R,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::DELETE</autogen>
		</item>

		<item>
			<name>(Hyper) Control and Tab as Delete and Backspace Keys</name>
			<identifier>private.hyper_left_delete_backspace_alternative</identifier>
			<autogen>__KeyToKey__ KeyCode::CONTROL_L,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::FORWARD_DELETE</autogen>
			<autogen>__KeyToKey__ KeyCode::TAB,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::DELETE</autogen>
		</item>

		<item>
			<name>(Hyper) Z and X as Home and End Keys</name>
			<identifier>private.hyper_left_home_end</identifier>
			<autogen>__KeyToKey__ KeyCode::Z,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::HOME</autogen>
			<autogen>__KeyToKey__ KeyCode::X,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::END</autogen>
		</item>

		<item>
			<name>(Hyper) C and V Keys as Backtick and Tilde Keys</name>
			<identifier>private.hyper_left_backtick_tilde</identifier>
			<autogen>__KeyToKey__ KeyCode::C,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::BACKQUOTE</autogen>
			<autogen>__KeyToKey__ KeyCode::V,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::BACKQUOTE | ModifierFlag::SHIFT_L</autogen>
		</item>

		<item>
			<name>Add more bindings to the middle (Brackets and Parens)</name>

			<item>
				<name>(Hyper) T and Y as Parenthesis</name>
				<identifier>private.hyper_more_parenthesis</identifier>
				<autogen>__KeyToKey__ KeyCode::T,
					ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
					KeyCode::KEY_9 | ModifierFlag::SHIFT_L</autogen>
				<autogen>__KeyToKey__ KeyCode::Y,
					ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
					KeyCode::KEY_0 | ModifierFlag::SHIFT_L</autogen>
			</item>
			<item>
				<name>(Hyper) G and H as Curly Brackets</name>
				<identifier>private.hyper_more_curly_brackets</identifier>
				<autogen>__KeyToKey__ KeyCode::G,
					ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
					KeyCode::BRACKET_LEFT | ModifierFlag::SHIFT_L</autogen>
				<autogen>__KeyToKey__ KeyCode::H,
					ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
					KeyCode::BRACKET_RIGHT | ModifierFlag::SHIFT_L</autogen>
			</item>
			<item>
				<name>(Hyper) B and N as Square Brackets</name>
				<identifier>private.hyper_more_square_brackets</identifier>
				<autogen>__KeyToKey__ KeyCode::B,
					ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
					KeyCode::BRACKET_LEFT</autogen>
				<autogen>__KeyToKey__ KeyCode::N,
					ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
					KeyCode::BRACKET_RIGHT</autogen>
			</item>
			<item>
				<name>(Hyper) J and K as Angle Brackets</name>
				<identifier>private.hyper_more_angle_brackets</identifier>
				<autogen>__KeyToKey__ KeyCode::J,
					ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
					KeyCode::COMMA | ModifierFlag::SHIFT_L</autogen>
				<autogen>__KeyToKey__ KeyCode::K,
					ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
					KeyCode::DOT | ModifierFlag::SHIFT_L</autogen>
			</item>
			<item>
				<name>(Hyper) Spacebar as Spacebar</name>
				<identifier>private.hyper_more_space</identifier>
				<autogen>__KeyToKey__ KeyCode::SPACE,
					ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
					KeyCode::SPACE</autogen>
			</item>

		</item>

	</item>

	<item>

		<name>HYPER Right-hand Side Bindings (Vim-style)</name>

		<item>
			<name>[V60 only] (Hyper) PC_Menu and Right Command Keys as PageUp and PageDown Keys</name>
			<identifier>private.hyper_right_pgup_pgdn</identifier>
			<device_only>DeviceVendor::KBP, DeviceProduct::V60</device_only>
			<autogen>__KeyToKey__ KeyCode::PC_APPLICATION,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::PAGEUP</autogen>
			<autogen>__KeyToKey__ KeyCode::COMMAND_R,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::PAGEDOWN</autogen>
		</item>

		<item>
			<name> [V60 only] (Hyper) Right Option and Right Control Keys as Home and End Keys</name>
			<identifier>private.hyper_right_home_end</identifier>
			<device_only>DeviceVendor::KBP, DeviceProduct::V60</device_only>
			<autogen>__KeyToKey__ KeyCode::OPTION_R,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::HOME</autogen>
			<autogen>__KeyToKey__ KeyCode::CONTROL_R,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::END</autogen>
		</item>

		<item>
			<name>[V60 only] Remap Bottom-right Modifiers as Vim-style Arrow Keys</name>
			<identifier>private.vim_style_arrow_keys</identifier>
			<device_only>DeviceVendor::KBP, DeviceProduct::V60</device_only>
			<autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CURSOR_LEFT</autogen>
			<autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CURSOR_DOWN</autogen>
			<autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::CURSOR_UP</autogen>
			<autogen>__KeyToKey__ KeyCode::CONTROL_R, KeyCode::CURSOR_RIGHT</autogen>
		</item>

		<item>
			<name>(Hyper) HJKL as Arrow Keys</name>
			<identifier>private.hyper_right_arrow_keys</identifier>
			<autogen>--KeyToKey-- KeyCode::H,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::CURSOR_LEFT</autogen>
			<autogen>--KeyToKey-- KeyCode::J,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::CURSOR_DOWN</autogen>
			<autogen>--KeyToKey-- KeyCode::K,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::CURSOR_UP</autogen>
			<autogen>--KeyToKey-- KeyCode::L,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::CURSOR_RIGHT</autogen>
		</item>

		<item>
			<name>(Hyper) B and U as Delete and Backspace Keys</name>
			<identifier>private.hyper_right_delete_backspace</identifier>
			<autogen>__KeyToKey__ KeyCode::B,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::FORWARD_DELETE</autogen>
			<autogen>__KeyToKey__ KeyCode::U,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::DELETE</autogen>
		</item>

		<item>
			<name>(Hyper) N and M Keys as Backtick and Tilde Keys</name>
			<identifier>private.hyper_right_backtick_tilde</identifier>
			<autogen>__KeyToKey__ KeyCode::N,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::BACKQUOTE</autogen>
			<autogen>__KeyToKey__ KeyCode::M,
				ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::BACKQUOTE | ModifierFlag::SHIFT_L</autogen>
		</item>

	</item>

	<item>

		<name>META Bindings (Vim Symbols)</name>

		<item>
			<name>(Meta) QWER as [ ; , . ^ ] Symbols</name>
			<identifier>private.meta_qwer</identifier>
			<autogen>__KeyToKey__ KeyCode::Q,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::SEMICOLON</autogen>
			<autogen>__KeyToKey__ KeyCode::W,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::COMMA</autogen>
			<autogen>__KeyToKey__ KeyCode::E,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::DOT</autogen>
			<autogen>__KeyToKey__ KeyCode::R,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::KEY_6 | ModifierFlag::SHIFT_L</autogen>
		</item>
		<item>
			<name>(Meta) ASDF as MDAS Symbols</name>
			<identifier>private.meta_asdf</identifier>
			<autogen>__KeyToKey__ KeyCode::A,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::KEY_8 | ModifierFlag::SHIFT_L</autogen>
			<autogen>__KeyToKey__ KeyCode::S,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::SLASH</autogen>
			<autogen>__KeyToKey__ KeyCode::D,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::EQUAL | ModifierFlag::SHIFT_L</autogen>
			<autogen>__KeyToKey__ KeyCode::F,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::MINUS</autogen>
		</item>
		<item>
			<name>(Meta) ZXCV as [ # ? = $ ] Symbols</name>
			<identifier>private.meta_zxcv</identifier>
			<autogen>__KeyToKey__ KeyCode::Z,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::KEY_3 | ModifierFlag::SHIFT_L</autogen>
			<autogen>__KeyToKey__ KeyCode::X,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::SLASH | ModifierFlag::SHIFT_L</autogen>
			<autogen>__KeyToKey__ KeyCode::C,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::EQUAL</autogen>
			<autogen>__KeyToKey__ KeyCode::V,
				ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
				KeyCode::KEY_4 | ModifierFlag::SHIFT_L</autogen>
		</item>

	</item>

</item>

</root>
