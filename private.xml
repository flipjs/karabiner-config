<?xml version="1.0"?>

<root>

  <devicevendordef>
    <vendorname>USBKEYB</vendorname>
    <vendorid>0x04d9</vendorid>
  </devicevendordef>

  <deviceproductdef>
    <productname>V60</productname>
    <productid>0x0112</productid>
  </deviceproductdef>

  <deviceproductdef>
    <productname>MJ_TKL</productname>
    <productid>0x2011</productid>
  </deviceproductdef>

  <item>

    <name>60% Keyboard Setup</name>

    <item>
      <name>Remap Section Key to Backquote-Tilde</name>
      <identifier>private.section_key_to_backquote</identifier>
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
    </item>

    <item>
      <name>Menu and Ctrl_R (refer to SEIL) keys as down-up arrow keys</name>
      <identifier>private.menu_ctrl_r_as_du_arrow_keys</identifier>
      <device_only>DeviceVendor::USBKEYB</device_only>
      <autogen>--KeyToKey-- KeyCode::PC_APPLICATION,
                            KeyCode::CURSOR_DOWN</autogen>
      <autogen>--KeyToKey-- KeyCode::CONTROL_R,
                            KeyCode::CURSOR_UP</autogen>
    </item>

    <item>
      <name>ALT keys as left-right arrow keys</name>
      <identifier>private.alt_keys_as_lr_arrow_keys</identifier>
      <device_only>DeviceVendor::USBKEYB</device_only>
      <autogen>--KeyToKey-- KeyCode::OPTION_L,
                            KeyCode::CURSOR_LEFT</autogen>
      <autogen>--KeyToKey-- KeyCode::OPTION_R,
                            KeyCode::CURSOR_RIGHT</autogen>
    </item>

    <item>
      <name>Command_R as OPTION_L</name>
      <identifier>private.cmd_r_as_option_l</identifier>
      <device_only>DeviceVendor::USBKEYB</device_only>
      <autogen>--KeyToKey-- KeyCode::COMMAND_R,
                            KeyCode::OPTION_L</autogen>
    </item>

    <item>
      <name>Remap Caps Lock to Hyper</name>
      <appendix>OS X doesn't have a Hyper. This maps caps lock (actually F19, refer to SEIL) to Control + Shift + Option + Command.</appendix>
      <identifier>private.caps_lock_to_hyper</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::F19,
        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>
    </item>

    <item>
      <name>60% Keyboards Basic HYPER Settings (needs HYPER KEY set up)</name>
      <appendix></appendix>
      <appendix>You must check at least this box to activate the Space-Hyper features.</appendix>
      <appendix></appendix>
      <appendix>ARROWS:  HYPER+PL;'=arrows</appendix>
      <appendix>ARROWS:  HYPER+WASD=arrows</appendix>
      <appendix>DEL:         HYPER+Backspace=Del</appendix>
      <appendix>Fxx:          HYPER+1â€¦=F1..F12</appendix>
	  <appendix>Tilde/Backtick:          HYPER+Q,E</appendix>
      <appendix>PgUp/PgDn:          HYPER+[,]</appendix>
      <appendix>Home/End:          HYPER+comma,dot</appendix>
      <appendix></appendix>
      <appendix>IMPORTANT: in the "Key Repeat" tab, you must set:</appendix>
      <appendix>- Initial modifier wait: 150ms</appendix>
      <appendix>- Timeout: 300ms</appendix>
      <appendix>- Delay until repeat: 500ms</appendix>
      <identifier>private.space_hyperkey</identifier>

      <!-- Arrow keys: WASD -->
      <autogen>--KeyToKey-- KeyCode::W,
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_UP</autogen>
      <autogen>--KeyToKey-- KeyCode::A,
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_LEFT</autogen>
      <autogen>--KeyToKey-- KeyCode::S,
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_DOWN</autogen>
      <autogen>--KeyToKey-- KeyCode::D,
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_RIGHT</autogen>

      <!-- Arrow keys: PL;'' -->
      <autogen>--KeyToKey-- KeyCode::P,
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_UP</autogen>
      <autogen>--KeyToKey-- KeyCode::L,
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_LEFT</autogen>
      <autogen>--KeyToKey-- KeyCode::SEMICOLON,
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_DOWN</autogen>
      <autogen>--KeyToKey-- KeyCode::QUOTE,
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_RIGHT</autogen>

      <!-- PAGEUP and PAGEDOWN as [,] -->
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::PAGEDOWN</autogen>

      <!-- HOME and END as <,> -->
      <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::END</autogen>

      <!-- Q and E as `,~ -->
      <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::BACKQUOTE | ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::BACKQUOTE</autogen>

      <!-- F1 to F12 as NUM ROWS -->
      <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::F3</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::F4</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::F5</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::F6</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::F7</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::F8</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::F9</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_MUTE</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_UP</autogen>

      <!-- (Forward) DELETE as HYPER+BACKSPACE -->
      <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::FORWARD_DELETE</autogen>

    </item>

  </item>

</root>
