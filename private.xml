<?xml version="1.0"?>

<root>

  <devicevendordef>
    <vendorname>USBKEYB</vendorname>
    <vendorid>0x04d9</vendorid>
  </devicevendordef>

  <deviceproductdef>
    <productname>V60</productname>
    <productid>0x0112</productid>
  </deviceproductdef>

  <deviceproductdef>
    <productname>MJ_TKL</productname>
    <productid>0x2011</productid>
  </deviceproductdef>

  <item>
    <name>60% Keyboard Setup</name>

    <item>

      <name>Hyper + Right Modifiers as arrow keys</name>

      <identifier>private.right_modifiers_as_arrow_keys</identifier>
      <device_only>DeviceVendor::USBKEYB</device_only>

      <!-- Hyper + Right Modifiers as Arrow Keys -->
      <autogen>--KeyToKey-- KeyCode::SLASH, 
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_UP</autogen>
      <autogen>--KeyToKey-- KeyCode::OPTION_R, 
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_LEFT</autogen>
      <autogen>--KeyToKey-- KeyCode::COMMAND_R, 
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_DOWN</autogen>
      <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, 
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_RIGHT</autogen>

    </item>

    <item>

      <name>Command and Menu keys as left-right arrow keys</name>

      <identifier>private.win_menu_as_arrow_keys</identifier>
      <device_only>DeviceVendor::USBKEYB</device_only>

      <!-- Win and Menu keys as Left and Right Arrow keys -->
      <autogen>--KeyToKey-- KeyCode::COMMAND_R, 
                            KeyCode::BACKQUOTE</autogen>
      <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, 
                            KeyCode::FORWARD_DELETE</autogen>

    </item>



    <item>

      <name>Remap Section Key to Backquote-Tilde</name>

      <identifier>private.section_key_to_backquote</identifier>

      <!-- Section Key to Backquote -->
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>

    </item>


    <item>

      <name>Remap Caps Lock to Hyper</name>
      <appendix>OS X doesn't have a Hyper. This maps caps lock (actually F19) to Control + Shift + Option + Command.</appendix>

      <identifier>private.caps_lock_to_hyper</identifier>

      <!-- CAPSLOCK TO HYPER KEY -->
      <autogen>
        __KeyToKey__
        KeyCode::F19,

        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>

    </item>


    <item>

      <name>Remap Control_R to Hyper</name>
      <appendix>This maps Right Ctrl key to Control + Shift + Option + Command.</appendix>

      <identifier>private.control_r_to_hyper</identifier>

      <!-- RIGHT CTRL TO HYPER KEY -->
      <autogen>
        __KeyToKey__
        KeyCode::CONTROL_R,

        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>

    </item>


    <item>

      <name>Remap Option_R to Hyper</name>
      <appendix>This maps Right Option key to Control + Shift + Option + Command.</appendix>

      <identifier>private.option_r_to_hyper</identifier>

      <!-- RIGHT OPTION TO HYPER KEY -->
      <autogen>
        __KeyToKey__
        KeyCode::OPTION_R,

        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>

    </item>


    <item>

      <name>Remap Spacebar to Hyper</name>
      <appendix>This maps Spacebar to Control + Shift + Option + Command.</appendix>

      <identifier>private.spacebar_to_hyper</identifier>

      <!-- SPACEBAR TO HYPER KEY -->
      <autogen>__KeyOverlaidModifier__
        KeyCode::SPACE,
        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::SPACE
      </autogen>
      
      <!-- Space-B is our auto-repeat space -->
      <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::SPACE</autogen>


    </item>


    <item>

      <name>60% Keyboards Basic FN Settings</name>
      <appendix></appendix>
      <appendix>You must check at least this box to activate the Space-Hyper features.</appendix>
      <appendix></appendix>
      <appendix>ARROWS:  HYPER+PL;'=arrows</appendix>
      <appendix>ARROWS:  HYPER+WASD=arrows</appendix>
      <appendix>DEL:         HYPER+Backspace=Del</appendix>
      <appendix>Fxx:          HYPER+1â€¦=F1..F12</appendix>
      <appendix>PgUp/PgDn:          HYPER+[,]</appendix>
      <appendix>Home/End:          HYPER+comma,dot</appendix>
      <appendix></appendix>
      <appendix>IMPORTANT: in the "Key Repeat" tab, you must set:</appendix> 
      <appendix>- Initial modifier wait: 150ms</appendix>
      <appendix>- Timeout: 300ms</appendix>
      <appendix>- Delay until repeat: 500ms</appendix>
      <identifier>private.space_hyperkey</identifier>


      <!-- Arrow keys: WASD -->
      <autogen>--KeyToKey-- KeyCode::W, 
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_UP</autogen>
      <autogen>--KeyToKey-- KeyCode::A, 
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_LEFT</autogen>
      <autogen>--KeyToKey-- KeyCode::S, 
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_DOWN</autogen>
      <autogen>--KeyToKey-- KeyCode::D, 
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_RIGHT</autogen>

      <!-- Arrow keys: PL;'' -->
      <autogen>--KeyToKey-- KeyCode::P, 
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_UP</autogen>
      <autogen>--KeyToKey-- KeyCode::L, 
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_LEFT</autogen>
      <autogen>--KeyToKey-- KeyCode::SEMICOLON,
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_DOWN</autogen>
      <autogen>--KeyToKey-- KeyCode::QUOTE, 
                            ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
                            KeyCode::CURSOR_RIGHT</autogen>

      <!-- PAGEUP and PAGEDOWN as [,] -->
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::PAGEDOWN</autogen>

      <!-- HOME and END as <,> -->
      <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::END</autogen>

      <!-- F1 to F12 as NUM ROWS -->
      <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::EXPOSE_ALL</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::LAUNCHPAD</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_KEYBOARDLIGHT_LOW</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_KEYBOARDLIGHT_HIGH</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_MUSIC_PREV</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_MUSIC_PLAY</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_MUSIC_NEXT</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_MUTE</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_UP</autogen>

      <!-- (Forward) DELETE as HYPER+BACKSPACE -->
      <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::FORWARD_DELETE</autogen>




      <!-- TEST BINDINGS HERE --> 

    </item>


  </item>

</root>
