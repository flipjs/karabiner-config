<?xml version="1.0"?>

<root>


  <devicevendordef>
    <vendorname>KBT</vendorname>
    <vendorid>0x0f39</vendorid>
  </devicevendordef>

  <deviceproductdef>
    <productname>Poker</productname>
    <productid>0x0611</productid>
  </deviceproductdef>

  <item>
    <name>KBT Poker</name>

    <item>

      <name>Remap Caps Lock to Hyper</name>
      <appendix>OS X doesn't have a Hyper. This maps caps lock (actually F19) to Control + Shift + Option + Command.</appendix>

      <identifier>caps_lock_to_hyper</identifier>

      <!-- CAPSLOCK TO HYPER KEY -->
      <autogen>
        __KeyToKey__
        KeyCode::F19,

        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>

    </item>


    <item>

      <name>Remap Option_R to Hyper</name>
      <appendix>This maps Right Option key to Control + Shift + Option + Command.</appendix>

      <identifier>option_r_to_hyper</identifier>

      <!-- RIGHT OPTION TO HYPER KEY -->
      <autogen>
        __KeyToKey__
        KeyCode::OPTION_R,

        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>

    </item>


    <item>

      <name>Remap Command_R to Hyper</name>
      <appendix>This maps Right Command key to Control + Shift + Option + Command.</appendix>

      <identifier>command_r_to_hyper</identifier>

      <!-- RIGHT COMMAND TO HYPER KEY -->
      <autogen>
        __KeyToKey__
        KeyCode::COMMAND_R,

        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>

    </item>


    <item>

      <name>Remap MENU key to Hyper</name>
      <appendix>This maps MENU key to Control + Shift + Option + Command.</appendix>

      <identifier>menu_to_hyper</identifier>

      <!-- MENU KEY TO HYPER KEY -->
      <autogen>
        __KeyToKey__
        KeyCode::PC_APPLICATION,

        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>

    </item>


    <item>

      <name>Remap Control_R to Hyper</name>
      <appendix>This maps Right Ctrl key to Control + Shift + Option + Command.</appendix>

      <identifier>control_r_to_hyper</identifier>

      <!-- RIGHT CTRL TO HYPER KEY -->
      <autogen>
        __KeyToKey__
        KeyCode::CONTROL_R,

        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>

    </item>


    <item>

      <name>60% KEYBINDINGS</name>
      <appendix>Using HYPER as modifier.</appendix>
      <appendix>Cursor keys as P,L,semicolon,quote</appendix>
      <appendix>F1 to F12 as Num Rows</appendix>
      <appendix>Home/End as comma,dot (Angle Brackets)</appendix>
      <appendix>PageUp/PageDown as O, Left Bracket</appendix>
      <appendix>Parens, Curly, Square, Angle Brackets as W,E | S,D | X,C | V,B</appendix>
      <appendix>Volume Mute, Up, Down as Q,A,Z</appendix>
      <appendix>Delete as (Hyper) Backspace</appendix>
      <appendix>Backquote/Tilde as (Hyper) Double-S key</appendix>
      <appendix>Escape as Double-S key</appendix>
      <identifier>sixty_keybindings</identifier>
      <device_only>DeviceVendor::KBT, DeviceProduct::Poker</device_only>
      <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>

      <!-- CURSOR ARROW KEYS as P, L, Semicolon, Quote  -->
      <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::QUOTE, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>

      <!-- PAGEUP and PAGEDOWN as semicolon, quote -->
      <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::PAGEDOWN</autogen>

      <!-- HOME and END as <,> -->
      <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::END</autogen>

      <!-- F1 to F12 as NUM ROWS -->
      <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::EXPOSE_ALL</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::LAUNCHPAD</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_KEYBOARDLIGHT_LOW</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_KEYBOARDLIGHT_HIGH</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_MUSIC_PREV</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_MUSIC_PLAY</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_MUSIC_NEXT</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_MUTE</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_UP</autogen>

      <!-- PARENTHESIS as W,E -->
      <autogen>__KeyToKey__ KeyCode::W, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>

      <!-- CURLY BRACES as S,D -->
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>

      <!-- SQUARE BRACES as X,C -->
      <autogen>__KeyToKey__ KeyCode::X, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::BRACKET_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::BRACKET_RIGHT</autogen>

      <!-- ANGLE BRACES as V,B -->
      <autogen>__KeyToKey__ KeyCode::V, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>

      <!-- VOLUME MUTE/UP/DOWN as Q,A,Z -->
      <autogen>__KeyToKey__ KeyCode::Q, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_MUTE</autogen>
      <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::Z, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_DOWN</autogen>

      <!-- (Forward) DELETE as HYPER+BACKSPACE -->
      <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::FORWARD_DELETE</autogen>

      <!-- TILDE as HYPER+DOUBLE-S -->
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
      <!-- BACKQUOTE as HYPER+TAB -->
      <autogen>__KeyToKey__ KeyCode::TAB, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::BACKQUOTE</autogen>

      <!-- ESCAPE as HYPER+SECTION (ansi backquote) -->
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::ESCAPE</autogen>




      <!-- TEST BINDINGS HERE --> 

    </item>


  </item>

</root>
