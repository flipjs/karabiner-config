<?xml version="1.0"?>

<root>


  <devicevendordef>
    <vendorname>KBP</vendorname>
    <vendorid>0x04d9</vendorid>
  </devicevendordef>

  <deviceproductdef>
    <productname>V60</productname>
    <productid>0x0112</productid>
  </deviceproductdef>

  <item>
    <name>KBP V60 Settings</name>

    <item>

      <name>Right Modifiers plus ? as arrow keys (V60 only)</name>

      <identifier>private.right_modifiers_as_arrow_keys</identifier>
      <device_only>DeviceVendor::KBP, DeviceProduct::V60</device_only>

      <!-- First, bind question mark and slash to using mod shift and hyper keys -->
      <!-- IMPORTANT: The next 3 lines need to be in right order, do not change it! -->
      <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::SHIFT_L, KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::SHIFT_R, KeyCode::SLASH, ModifierFlag::SHIFT_R</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::COMMAND_L, KeyCode::SLASH, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::C, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
      <!-- Right Modifiers as Arrow Keys -->
      <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::PC_APPLICATION, KeyCode::CURSOR_RIGHT</autogen>

    </item>


    <item>

      <name>Remap Section Key to Backquote-Tilde</name>

      <identifier>private.section_key_to_backquote</identifier>

      <!-- Section Key to Backquote -->
      <autogen>__KeyToKey__ KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>

    </item>


    <item>

      <name>Remap Caps Lock to Hyper</name>
      <appendix>OS X doesn't have a Hyper. This maps caps lock (actually F19) to Control + Shift + Option + Command.</appendix>

      <identifier>private.caps_lock_to_hyper</identifier>

      <!-- CAPSLOCK TO HYPER KEY -->
      <autogen>
        __KeyToKey__
        KeyCode::F19,

        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>

    </item>


    <item>

      <name>Remap Control_R to Hyper</name>
      <appendix>This maps Right Ctrl key to Control + Shift + Option + Command.</appendix>

      <identifier>private.control_r_to_hyper</identifier>

      <!-- RIGHT CTRL TO HYPER KEY -->
      <autogen>
        __KeyToKey__
        KeyCode::CONTROL_R,

        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>

    </item>


    <item>

      <name>60% KEYBINDINGS</name>
      <appendix>Using HYPER as modifier.</appendix>
      <appendix>F1 to F12 as Num Rows</appendix>
      <appendix>PageUp/PageDown as [,]</appendix>
      <appendix>Home/End as comma,dot</appendix>
      <appendix>Delete as (Hyper) Backspace</appendix>
      <identifier>private.sixty_keybindings</identifier>

      <!-- PAGEUP and PAGEDOWN as [,] -->
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::PAGEDOWN</autogen>

      <!-- HOME and END as <,> -->
      <autogen>__KeyToKey__ KeyCode::COMMA, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::END</autogen>

      <!-- F1 to F12 as NUM ROWS -->
      <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::EXPOSE_ALL</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::LAUNCHPAD</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_5, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_KEYBOARDLIGHT_LOW</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_KEYBOARDLIGHT_HIGH</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_MUSIC_PREV</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_MUSIC_PLAY</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_MUSIC_NEXT</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_MUTE</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::EQUAL, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::VK_CONSUMERKEY_VOLUME_UP</autogen>

      <!-- (Forward) DELETE as HYPER+BACKSPACE -->
      <autogen>__KeyToKey__ KeyCode::DELETE, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L, KeyCode::FORWARD_DELETE</autogen>




      <!-- TEST BINDINGS HERE --> 

    </item>


  </item>

</root>
